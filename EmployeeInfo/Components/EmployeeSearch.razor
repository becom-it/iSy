@using  EmployeeData.Models
@inject EmployeeData.Services.IEmployeeService empService

<div class="emp-search">
    <InputAutoComplete Placeholder="Mitarbeiter" CurrentText="@SearchTerm" InputChanged="InpChanged" SearchResult="FoundEmployeesDisplay" DebounceTime="500" />
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    [Parameter]
    public EventCallback<LdapEmployee> EmployeeSelected { get; set; }

    [Parameter]
    public LdapEmployee CurrentEmployee { get; set; } = null;

    public List<LdapEmployee> FoundEmployees { get; set; } = new List<LdapEmployee>();

    public List<string> FoundEmployeesDisplay { get; set; } = new List<string>();

    public string SearchTerm { get; set; }


    async Task InpChanged(string text)
    {
        if (string.IsNullOrEmpty(text) || text.Length < 3) return;
        if (FoundEmployeesDisplay.Contains(text))
        {
            CurrentEmployee = FoundEmployees.Where(x => $"{x.FirstName} {x.LastName}" == text).FirstOrDefault();
            await EmployeeSelected.InvokeAsync(CurrentEmployee);
            return;
        }

        FoundEmployeesDisplay.Clear();
        FoundEmployees.Clear();
        FoundEmployees = await empService.SearchEmployee(text);
        FoundEmployeesDisplay = FoundEmployees.Select(x => $"{x.FirstName} {x.LastName}").ToList();

    }

    protected override async Task OnInitializedAsync()
    {
        if (CurrentEmployee == null)
        {
            ////Aktuellen Mitarbeiter ermitteln
            //var uname = "MPRATTINGE";

            var authState = await authenticationStateTask;

            var user = authState.User;

            if (user.Identity.IsAuthenticated)
            {
                var claim = user.Claims.Where(x => x.Type == System.Security.Claims.ClaimTypes.NameIdentifier).FirstOrDefault();
                if (claim != null)
                {
                    //Aktuellen User laden
                    CurrentEmployee = await empService.LoadEmployeeWithId(claim.Value);
                    CurrentEmployee.IsCurrent = true;
                    await EmployeeSelected.InvokeAsync(CurrentEmployee);
                    SearchTerm = $"{CurrentEmployee.FirstName} {CurrentEmployee.LastName}";
                }
            }


        }
    }
}